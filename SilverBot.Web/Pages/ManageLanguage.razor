@page "/managelanguage/{id:int}"
@using SilverBotDS.WebHelpers
@using SilverBotDS.Objects
@using Microsoft.AspNetCore.Http
@using DSharpPlus
@using System.Text.Json
@attribute [Authorize]
@*
@inject Config _config
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject DiscordClient _discord
@inject DatabaseContext _dbctx
@inject IJSRuntime _jsRuntime
@inject NavigationManager _uriHelper
@inject HttpClient _client

@code {

    [Parameter]
    public int Id { get; set; }

    private string _bindmaterial;
}

@{
    JsonSerializerOptions options = new()
    {
        WriteIndented = true,
    };
    var auser = AuthenticationStateProvider.AuthState();
    var uid = auser.User.PUID();
    var thing = _httpContextAccessor.HttpContext.Session.GetUserInfoFromSession(_client);
    var translator = _dbctx.translatorSettings.FirstOrDefault(x => x.Id == thing.UId);
    if (translator == null)
    {
        _uriHelper.NavigateTo("/", true);
    }

    var languages = translator.CustomLanguages;

    if (languages.Count <= Id)
    {
        _uriHelper.NavigateTo("/languageeditor");
    }

    var language = translator.CustomLanguages.ToList().ElementAt(Id);
    var json = JsonSerializer.Serialize(language, options);

    async Task Downloadlanguage()
    {
        await _jsRuntime.InvokeVoidAsync("download", json, "language.json", "application/json");
    }

    void UpdateHeading()
    {
        _bindmaterial = json;
    }

    void HandleValidSubmit()
    {
        var o = _dbctx.translatorSettings.FirstOrDefault(x => x.Id == thing.UId);
        var p = o.CustomLanguages.ToList();
        p[Id] = JsonSerializer.Deserialize<Language>(_bindmaterial);
        p[Id].Id = language.Id;
        o.CustomLanguages = p;
        _dbctx.translatorSettings.Attach(o);
        _dbctx.translatorSettings.Update(o);
        Console.WriteLine(_dbctx.SaveChanges());
        _uriHelper.NavigateTo("/languageeditor");
        // Process the valid form
    }
}

<p>Welcome to the beta version of the language edit page</p>
<p>Currently editing: <strong>@language.LangName</strong></p>
<p>If you want to download the file please wait for your browser to load it and DON'T SPAM THE BUTTON UNLESS YOU WANT TO HAVE A BAD TIME</p>
<button @onclick="UpdateHeading">
    Click on button to load thing
</button>
<button @onclick="HandleValidSubmit">
    Save
</button>
<button @onclick="Downloadlanguage">
    Download to your computer
</button>
<RadzenTextArea @bind-Value="@_bindmaterial" Style=" width: 100%; height: 100vh;"/>*@